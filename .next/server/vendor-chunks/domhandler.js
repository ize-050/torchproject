"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/domhandler";
exports.ids = ["vendor-chunks/domhandler"];
exports.modules = {

/***/ "(ssr)/./node_modules/domhandler/index.js":
/*!******************************************!*\
  !*** ./node_modules/domhandler/index.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nvar ElementType = __webpack_require__(/*! domelementtype */ \"(ssr)/./node_modules/domelementtype/index.js\");\nvar re_whitespace = /\\s+/g;\nvar NodePrototype = __webpack_require__(/*! ./lib/node */ \"(ssr)/./node_modules/domhandler/lib/node.js\");\nvar ElementPrototype = __webpack_require__(/*! ./lib/element */ \"(ssr)/./node_modules/domhandler/lib/element.js\");\nfunction DomHandler(callback, options, elementCB) {\n    if (typeof callback === \"object\") {\n        elementCB = options;\n        options = callback;\n        callback = null;\n    } else if (typeof options === \"function\") {\n        elementCB = options;\n        options = defaultOpts;\n    }\n    this._callback = callback;\n    this._options = options || defaultOpts;\n    this._elementCB = elementCB;\n    this.dom = [];\n    this._done = false;\n    this._tagStack = [];\n    this._parser = this._parser || null;\n}\n//default options\nvar defaultOpts = {\n    normalizeWhitespace: false,\n    withStartIndices: false,\n    withEndIndices: false\n};\nDomHandler.prototype.onparserinit = function(parser) {\n    this._parser = parser;\n};\n//Resets the handler back to starting state\nDomHandler.prototype.onreset = function() {\n    DomHandler.call(this, this._callback, this._options, this._elementCB);\n};\n//Signals the handler that parsing is done\nDomHandler.prototype.onend = function() {\n    if (this._done) return;\n    this._done = true;\n    this._parser = null;\n    this._handleCallback(null);\n};\nDomHandler.prototype._handleCallback = DomHandler.prototype.onerror = function(error) {\n    if (typeof this._callback === \"function\") {\n        this._callback(error, this.dom);\n    } else {\n        if (error) throw error;\n    }\n};\nDomHandler.prototype.onclosetag = function() {\n    //if(this._tagStack.pop().name !== name) this._handleCallback(Error(\"Tagname didn't match!\"));\n    var elem = this._tagStack.pop();\n    if (this._options.withEndIndices && elem) {\n        elem.endIndex = this._parser.endIndex;\n    }\n    if (this._elementCB) this._elementCB(elem);\n};\nDomHandler.prototype._createDomElement = function(properties) {\n    if (!this._options.withDomLvl1) return properties;\n    var element;\n    if (properties.type === \"tag\") {\n        element = Object.create(ElementPrototype);\n    } else {\n        element = Object.create(NodePrototype);\n    }\n    for(var key in properties){\n        if (properties.hasOwnProperty(key)) {\n            element[key] = properties[key];\n        }\n    }\n    return element;\n};\nDomHandler.prototype._addDomElement = function(element) {\n    var parent = this._tagStack[this._tagStack.length - 1];\n    var siblings = parent ? parent.children : this.dom;\n    var previousSibling = siblings[siblings.length - 1];\n    element.next = null;\n    if (this._options.withStartIndices) {\n        element.startIndex = this._parser.startIndex;\n    }\n    if (this._options.withEndIndices) {\n        element.endIndex = this._parser.endIndex;\n    }\n    if (previousSibling) {\n        element.prev = previousSibling;\n        previousSibling.next = element;\n    } else {\n        element.prev = null;\n    }\n    siblings.push(element);\n    element.parent = parent || null;\n};\nDomHandler.prototype.onopentag = function(name, attribs) {\n    var properties = {\n        type: name === \"script\" ? ElementType.Script : name === \"style\" ? ElementType.Style : ElementType.Tag,\n        name: name,\n        attribs: attribs,\n        children: []\n    };\n    var element = this._createDomElement(properties);\n    this._addDomElement(element);\n    this._tagStack.push(element);\n};\nDomHandler.prototype.ontext = function(data) {\n    //the ignoreWhitespace is officially dropped, but for now,\n    //it's an alias for normalizeWhitespace\n    var normalize = this._options.normalizeWhitespace || this._options.ignoreWhitespace;\n    var lastTag;\n    if (!this._tagStack.length && this.dom.length && (lastTag = this.dom[this.dom.length - 1]).type === ElementType.Text) {\n        if (normalize) {\n            lastTag.data = (lastTag.data + data).replace(re_whitespace, \" \");\n        } else {\n            lastTag.data += data;\n        }\n    } else {\n        if (this._tagStack.length && (lastTag = this._tagStack[this._tagStack.length - 1]) && (lastTag = lastTag.children[lastTag.children.length - 1]) && lastTag.type === ElementType.Text) {\n            if (normalize) {\n                lastTag.data = (lastTag.data + data).replace(re_whitespace, \" \");\n            } else {\n                lastTag.data += data;\n            }\n        } else {\n            if (normalize) {\n                data = data.replace(re_whitespace, \" \");\n            }\n            var element = this._createDomElement({\n                data: data,\n                type: ElementType.Text\n            });\n            this._addDomElement(element);\n        }\n    }\n};\nDomHandler.prototype.oncomment = function(data) {\n    var lastTag = this._tagStack[this._tagStack.length - 1];\n    if (lastTag && lastTag.type === ElementType.Comment) {\n        lastTag.data += data;\n        return;\n    }\n    var properties = {\n        data: data,\n        type: ElementType.Comment\n    };\n    var element = this._createDomElement(properties);\n    this._addDomElement(element);\n    this._tagStack.push(element);\n};\nDomHandler.prototype.oncdatastart = function() {\n    var properties = {\n        children: [\n            {\n                data: \"\",\n                type: ElementType.Text\n            }\n        ],\n        type: ElementType.CDATA\n    };\n    var element = this._createDomElement(properties);\n    this._addDomElement(element);\n    this._tagStack.push(element);\n};\nDomHandler.prototype.oncommentend = DomHandler.prototype.oncdataend = function() {\n    this._tagStack.pop();\n};\nDomHandler.prototype.onprocessinginstruction = function(name, data) {\n    var element = this._createDomElement({\n        name: name,\n        data: data,\n        type: ElementType.Directive\n    });\n    this._addDomElement(element);\n};\nmodule.exports = DomHandler;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/domhandler/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/domhandler/lib/element.js":
/*!************************************************!*\
  !*** ./node_modules/domhandler/lib/element.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("// DOM-Level-1-compliant structure\n\nvar NodePrototype = __webpack_require__(/*! ./node */ \"(ssr)/./node_modules/domhandler/lib/node.js\");\nvar ElementPrototype = module.exports = Object.create(NodePrototype);\nvar domLvl1 = {\n    tagName: \"name\"\n};\nObject.keys(domLvl1).forEach(function(key) {\n    var shorthand = domLvl1[key];\n    Object.defineProperty(ElementPrototype, key, {\n        get: function() {\n            return this[shorthand] || null;\n        },\n        set: function(val) {\n            this[shorthand] = val;\n            return val;\n        }\n    });\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvZG9taGFuZGxlci9saWIvZWxlbWVudC5qcyIsIm1hcHBpbmdzIjoiQUFBQSxrQ0FBa0M7O0FBQ2xDLElBQUlBLGdCQUFnQkMsbUJBQU9BLENBQUM7QUFDNUIsSUFBSUMsbUJBQW1CQyxPQUFPQyxPQUFPLEdBQUdDLE9BQU9DLE1BQU0sQ0FBQ047QUFFdEQsSUFBSU8sVUFBVTtJQUNiQyxTQUFTO0FBQ1Y7QUFFQUgsT0FBT0ksSUFBSSxDQUFDRixTQUFTRyxPQUFPLENBQUMsU0FBU0MsR0FBRztJQUN4QyxJQUFJQyxZQUFZTCxPQUFPLENBQUNJLElBQUk7SUFDNUJOLE9BQU9RLGNBQWMsQ0FBQ1gsa0JBQWtCUyxLQUFLO1FBQzVDRyxLQUFLO1lBQ0osT0FBTyxJQUFJLENBQUNGLFVBQVUsSUFBSTtRQUMzQjtRQUNBRyxLQUFLLFNBQVNDLEdBQUc7WUFDaEIsSUFBSSxDQUFDSixVQUFVLEdBQUdJO1lBQ2xCLE9BQU9BO1FBQ1I7SUFDRDtBQUNEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdG9yY2hfcHJvamVjdC8uL25vZGVfbW9kdWxlcy9kb21oYW5kbGVyL2xpYi9lbGVtZW50LmpzPzlhMjgiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRE9NLUxldmVsLTEtY29tcGxpYW50IHN0cnVjdHVyZVxudmFyIE5vZGVQcm90b3R5cGUgPSByZXF1aXJlKCcuL25vZGUnKTtcbnZhciBFbGVtZW50UHJvdG90eXBlID0gbW9kdWxlLmV4cG9ydHMgPSBPYmplY3QuY3JlYXRlKE5vZGVQcm90b3R5cGUpO1xuXG52YXIgZG9tTHZsMSA9IHtcblx0dGFnTmFtZTogXCJuYW1lXCJcbn07XG5cbk9iamVjdC5rZXlzKGRvbUx2bDEpLmZvckVhY2goZnVuY3Rpb24oa2V5KSB7XG5cdHZhciBzaG9ydGhhbmQgPSBkb21MdmwxW2tleV07XG5cdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShFbGVtZW50UHJvdG90eXBlLCBrZXksIHtcblx0XHRnZXQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0cmV0dXJuIHRoaXNbc2hvcnRoYW5kXSB8fCBudWxsO1xuXHRcdH0sXG5cdFx0c2V0OiBmdW5jdGlvbih2YWwpIHtcblx0XHRcdHRoaXNbc2hvcnRoYW5kXSA9IHZhbDtcblx0XHRcdHJldHVybiB2YWw7XG5cdFx0fVxuXHR9KTtcbn0pO1xuIl0sIm5hbWVzIjpbIk5vZGVQcm90b3R5cGUiLCJyZXF1aXJlIiwiRWxlbWVudFByb3RvdHlwZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJPYmplY3QiLCJjcmVhdGUiLCJkb21MdmwxIiwidGFnTmFtZSIsImtleXMiLCJmb3JFYWNoIiwia2V5Iiwic2hvcnRoYW5kIiwiZGVmaW5lUHJvcGVydHkiLCJnZXQiLCJzZXQiLCJ2YWwiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/domhandler/lib/element.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/domhandler/lib/node.js":
/*!*********************************************!*\
  !*** ./node_modules/domhandler/lib/node.js ***!
  \*********************************************/
/***/ ((module) => {

eval("// This object will be used as the prototype for Nodes when creating a\n// DOM-Level-1-compliant structure.\n\nvar NodePrototype = module.exports = {\n    get firstChild () {\n        var children = this.children;\n        return children && children[0] || null;\n    },\n    get lastChild () {\n        var children1 = this.children;\n        return children1 && children1[children1.length - 1] || null;\n    },\n    get nodeType () {\n        return nodeTypes[this.type] || nodeTypes.element;\n    }\n};\nvar domLvl1 = {\n    tagName: \"name\",\n    childNodes: \"children\",\n    parentNode: \"parent\",\n    previousSibling: \"prev\",\n    nextSibling: \"next\",\n    nodeValue: \"data\"\n};\nvar nodeTypes = {\n    element: 1,\n    text: 3,\n    cdata: 4,\n    comment: 8\n};\nObject.keys(domLvl1).forEach(function(key) {\n    var shorthand = domLvl1[key];\n    Object.defineProperty(NodePrototype, key, {\n        get: function() {\n            return this[shorthand] || null;\n        },\n        set: function(val) {\n            this[shorthand] = val;\n            return val;\n        }\n    });\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvZG9taGFuZGxlci9saWIvbm9kZS5qcyIsIm1hcHBpbmdzIjoiQUFBQSxzRUFBc0U7QUFDdEUsbUNBQW1DOztBQUNuQyxJQUFJQSxnQkFBZ0JDLE9BQU9DLE9BQU8sR0FBRztJQUNwQyxJQUFJQyxjQUFhO1FBQ2hCLElBQUlDLFdBQVcsSUFBSSxDQUFDQSxRQUFRO1FBQzVCLE9BQU9BLFlBQVlBLFFBQVEsQ0FBQyxFQUFFLElBQUk7SUFDbkM7SUFDQSxJQUFJQyxhQUFZO1FBQ2YsSUFBSUQsWUFBVyxJQUFJLENBQUNBLFFBQVE7UUFDNUIsT0FBT0EsYUFBWUEsU0FBUSxDQUFDQSxVQUFTRSxNQUFNLEdBQUcsRUFBRSxJQUFJO0lBQ3JEO0lBQ0EsSUFBSUMsWUFBVztRQUNkLE9BQU9DLFNBQVMsQ0FBQyxJQUFJLENBQUNDLElBQUksQ0FBQyxJQUFJRCxVQUFVRSxPQUFPO0lBQ2pEO0FBQ0Q7QUFFQSxJQUFJQyxVQUFVO0lBQ2JDLFNBQVM7SUFDVEMsWUFBWTtJQUNaQyxZQUFZO0lBQ1pDLGlCQUFpQjtJQUNqQkMsYUFBYTtJQUNiQyxXQUFXO0FBQ1o7QUFFQSxJQUFJVCxZQUFZO0lBQ2ZFLFNBQVM7SUFDVFEsTUFBTTtJQUNOQyxPQUFPO0lBQ1BDLFNBQVM7QUFDVjtBQUVBQyxPQUFPQyxJQUFJLENBQUNYLFNBQVNZLE9BQU8sQ0FBQyxTQUFTQyxHQUFHO0lBQ3hDLElBQUlDLFlBQVlkLE9BQU8sQ0FBQ2EsSUFBSTtJQUM1QkgsT0FBT0ssY0FBYyxDQUFDMUIsZUFBZXdCLEtBQUs7UUFDekNHLEtBQUs7WUFDSixPQUFPLElBQUksQ0FBQ0YsVUFBVSxJQUFJO1FBQzNCO1FBQ0FHLEtBQUssU0FBU0MsR0FBRztZQUNoQixJQUFJLENBQUNKLFVBQVUsR0FBR0k7WUFDbEIsT0FBT0E7UUFDUjtJQUNEO0FBQ0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90b3JjaF9wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzL2RvbWhhbmRsZXIvbGliL25vZGUuanM/MmEzYyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUaGlzIG9iamVjdCB3aWxsIGJlIHVzZWQgYXMgdGhlIHByb3RvdHlwZSBmb3IgTm9kZXMgd2hlbiBjcmVhdGluZyBhXG4vLyBET00tTGV2ZWwtMS1jb21wbGlhbnQgc3RydWN0dXJlLlxudmFyIE5vZGVQcm90b3R5cGUgPSBtb2R1bGUuZXhwb3J0cyA9IHtcblx0Z2V0IGZpcnN0Q2hpbGQoKSB7XG5cdFx0dmFyIGNoaWxkcmVuID0gdGhpcy5jaGlsZHJlbjtcblx0XHRyZXR1cm4gY2hpbGRyZW4gJiYgY2hpbGRyZW5bMF0gfHwgbnVsbDtcblx0fSxcblx0Z2V0IGxhc3RDaGlsZCgpIHtcblx0XHR2YXIgY2hpbGRyZW4gPSB0aGlzLmNoaWxkcmVuO1xuXHRcdHJldHVybiBjaGlsZHJlbiAmJiBjaGlsZHJlbltjaGlsZHJlbi5sZW5ndGggLSAxXSB8fCBudWxsO1xuXHR9LFxuXHRnZXQgbm9kZVR5cGUoKSB7XG5cdFx0cmV0dXJuIG5vZGVUeXBlc1t0aGlzLnR5cGVdIHx8IG5vZGVUeXBlcy5lbGVtZW50O1xuXHR9XG59O1xuXG52YXIgZG9tTHZsMSA9IHtcblx0dGFnTmFtZTogXCJuYW1lXCIsXG5cdGNoaWxkTm9kZXM6IFwiY2hpbGRyZW5cIixcblx0cGFyZW50Tm9kZTogXCJwYXJlbnRcIixcblx0cHJldmlvdXNTaWJsaW5nOiBcInByZXZcIixcblx0bmV4dFNpYmxpbmc6IFwibmV4dFwiLFxuXHRub2RlVmFsdWU6IFwiZGF0YVwiXG59O1xuXG52YXIgbm9kZVR5cGVzID0ge1xuXHRlbGVtZW50OiAxLFxuXHR0ZXh0OiAzLFxuXHRjZGF0YTogNCxcblx0Y29tbWVudDogOFxufTtcblxuT2JqZWN0LmtleXMoZG9tTHZsMSkuZm9yRWFjaChmdW5jdGlvbihrZXkpIHtcblx0dmFyIHNob3J0aGFuZCA9IGRvbUx2bDFba2V5XTtcblx0T2JqZWN0LmRlZmluZVByb3BlcnR5KE5vZGVQcm90b3R5cGUsIGtleSwge1xuXHRcdGdldDogZnVuY3Rpb24oKSB7XG5cdFx0XHRyZXR1cm4gdGhpc1tzaG9ydGhhbmRdIHx8IG51bGw7XG5cdFx0fSxcblx0XHRzZXQ6IGZ1bmN0aW9uKHZhbCkge1xuXHRcdFx0dGhpc1tzaG9ydGhhbmRdID0gdmFsO1xuXHRcdFx0cmV0dXJuIHZhbDtcblx0XHR9XG5cdH0pO1xufSk7XG4iXSwibmFtZXMiOlsiTm9kZVByb3RvdHlwZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJmaXJzdENoaWxkIiwiY2hpbGRyZW4iLCJsYXN0Q2hpbGQiLCJsZW5ndGgiLCJub2RlVHlwZSIsIm5vZGVUeXBlcyIsInR5cGUiLCJlbGVtZW50IiwiZG9tTHZsMSIsInRhZ05hbWUiLCJjaGlsZE5vZGVzIiwicGFyZW50Tm9kZSIsInByZXZpb3VzU2libGluZyIsIm5leHRTaWJsaW5nIiwibm9kZVZhbHVlIiwidGV4dCIsImNkYXRhIiwiY29tbWVudCIsIk9iamVjdCIsImtleXMiLCJmb3JFYWNoIiwia2V5Iiwic2hvcnRoYW5kIiwiZGVmaW5lUHJvcGVydHkiLCJnZXQiLCJzZXQiLCJ2YWwiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/domhandler/lib/node.js\n");

/***/ })

};
;